(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),A=t(645),i=t.n(A)()(r());i.push([n.id,"/*\nhtml5doctor.com Reset Stylesheet\nv1.6.1\nLast Updated: 2010-09-17\nAuthor: Richard Clark - http://richclarkdesign.com\nTwitter: @rich_clark\n*/\n\nhtml, body, div, span, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\nabbr, address, cite, code,\ndel, dfn, em, img, ins, kbd, q, samp,\nsmall, strong, sub, sup, var,\nb, i,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, summary,\ntime, mark, audio, video {\n    margin:0;\n    padding:0;\n    border:0;\n    outline:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\nbody {\n    line-height:1;\n}\n\narticle,aside,details,figcaption,figure,\nfooter,header,hgroup,menu,nav,section {\n    display:block;\n}\n\nnav ul {\n    list-style:none;\n}\n\nblockquote, q {\n    quotes:none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n    content:'';\n    content:none;\n}\n\na {\n    margin:0;\n    padding:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\n/* change colours to suit your needs */\nins {\n    background-color:#ff9;\n    color:#000;\n    text-decoration:none;\n}\n\n/* change colours to suit your needs */\nmark {\n    background-color:#ff9;\n    color:#000;\n    font-style:italic;\n    font-weight:bold;\n}\n\ndel {\n    text-decoration: line-through;\n}\n\nabbr[title], dfn[title] {\n    border-bottom:1px dotted;\n    cursor:help;\n}\n\ntable {\n    border-collapse:collapse;\n    border-spacing:0;\n}\n\n/* change border colour to suit your needs */\nhr {\n    display:block;\n    height:1px;\n    border:0;  \n    border-top:1px solid #cccccc;\n    margin:1em 0;\n    padding:0;\n}\n\ninput, select {\n    vertical-align:middle;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;;;;CAMC;;AAED;;;;;;;;;;;;IAYI,QAAQ;IACR,SAAS;IACT,QAAQ;IACR,SAAS;IACT,cAAc;IACd,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;;IAEI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,QAAQ;IACR,SAAS;IACT,cAAc;IACd,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA,sCAAsC;AACtC;IACI,qBAAqB;IACrB,UAAU;IACV,oBAAoB;AACxB;;AAEA,sCAAsC;AACtC;IACI,qBAAqB;IACrB,UAAU;IACV,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,wBAAwB;IACxB,WAAW;AACf;;AAEA;IACI,wBAAwB;IACxB,gBAAgB;AACpB;;AAEA,4CAA4C;AAC5C;IACI,aAAa;IACb,UAAU;IACV,QAAQ;IACR,4BAA4B;IAC5B,YAAY;IACZ,SAAS;AACb;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["/*\nhtml5doctor.com Reset Stylesheet\nv1.6.1\nLast Updated: 2010-09-17\nAuthor: Richard Clark - http://richclarkdesign.com\nTwitter: @rich_clark\n*/\n\nhtml, body, div, span, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\nabbr, address, cite, code,\ndel, dfn, em, img, ins, kbd, q, samp,\nsmall, strong, sub, sup, var,\nb, i,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, summary,\ntime, mark, audio, video {\n    margin:0;\n    padding:0;\n    border:0;\n    outline:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\nbody {\n    line-height:1;\n}\n\narticle,aside,details,figcaption,figure,\nfooter,header,hgroup,menu,nav,section {\n    display:block;\n}\n\nnav ul {\n    list-style:none;\n}\n\nblockquote, q {\n    quotes:none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n    content:'';\n    content:none;\n}\n\na {\n    margin:0;\n    padding:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\n/* change colours to suit your needs */\nins {\n    background-color:#ff9;\n    color:#000;\n    text-decoration:none;\n}\n\n/* change colours to suit your needs */\nmark {\n    background-color:#ff9;\n    color:#000;\n    font-style:italic;\n    font-weight:bold;\n}\n\ndel {\n    text-decoration: line-through;\n}\n\nabbr[title], dfn[title] {\n    border-bottom:1px dotted;\n    cursor:help;\n}\n\ntable {\n    border-collapse:collapse;\n    border-spacing:0;\n}\n\n/* change border colour to suit your needs */\nhr {\n    display:block;\n    height:1px;\n    border:0;  \n    border-top:1px solid #cccccc;\n    margin:1em 0;\n    padding:0;\n}\n\ninput, select {\n    vertical-align:middle;\n}"],sourceRoot:""}]);const a=i},426:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),A=t(645),i=t.n(A)()(r());i.push([n.id,"body {\n    background-color: black;\n    text-align: center;\n}\n\n.content {\n    width: 80vw;\n    height: 80vh;\n    border: 15px outset green;\n    border-radius: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n}\n.inputControls {\n    margin-top: 10px;\n}\n\nimg {\n    position: relative;\n    width: fit-content;\n    max-height: 60vh;\n    height: auto;\n    object-fit: fill;\n    border: 10px inset rgb(26, 201, 49);\n    border-radius: 12px;\n    margin-top: 10px;\n}\n\n#btnCopyLink {\n    margin: 25px;\n}\n\nbutton {\n    height: 48px;\n    border: 4px outset green;\n    background-color: transparent;\n    color: white;\n    padding: 10px;\n    font-weight: 550;\n    border-radius: 12px;\n}\n\nbutton:hover {\n    background-color: rgb(71, 255, 47);\n    color: black;\n}\n\nbutton:active {\n    background-color: green;\n    color: white;\n    border: 4px inset green;\n\n}\n\ninput {\n    background-color: transparent;\n    border-radius: 12px;\n    height: 40px;\n    color: white;\n}\n\ninput:focus {\n    outline: 2px solid green;\n\n}\n\n.testing {\n    color: white;\n}\n\n@media screen and (max-width: 700px) {\n    .content {\n        width: 96%;\n        height: 50%;\n        max-height: 70vh;\n        /* margin: 64px auto 0 auto; */\n        margin: 0 auto;\n        border: 5px outset green;\n    }\n\n    img {\n        width: 90%;\n        max-height: 50vh;\n        border: 5px inset green;\n    }\n\n    button {\n        width: 90%;\n        margin: 10px;\n    }\n\n    input {\n        width: 85%;\n        text-align: center;\n        margin: 0 auto;\n    }\n\n    .inputControls {\n        position: fixed;\n        bottom: 20px;\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n        align-items: flex-end;\n        row-gap: 15px;\n    }\n\n    .inputControls button {\n        margin: 0 auto;\n    }\n    \n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,yBAAyB;IACzB,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;AAClB;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,gBAAgB;IAChB,YAAY;IACZ,gBAAgB;IAChB,mCAAmC;IACnC,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,wBAAwB;IACxB,6BAA6B;IAC7B,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,kCAAkC;IAClC,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,uBAAuB;;AAE3B;;AAEA;IACI,6BAA6B;IAC7B,mBAAmB;IACnB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,wBAAwB;;AAE5B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI;QACI,UAAU;QACV,WAAW;QACX,gBAAgB;QAChB,8BAA8B;QAC9B,cAAc;QACd,wBAAwB;IAC5B;;IAEA;QACI,UAAU;QACV,gBAAgB;QAChB,uBAAuB;IAC3B;;IAEA;QACI,UAAU;QACV,YAAY;IAChB;;IAEA;QACI,UAAU;QACV,kBAAkB;QAClB,cAAc;IAClB;;IAEA;QACI,eAAe;QACf,YAAY;QACZ,WAAW;QACX,aAAa;QACb,sBAAsB;QACtB,yBAAyB;QACzB,qBAAqB;QACrB,aAAa;IACjB;;IAEA;QACI,cAAc;IAClB;;AAEJ",sourcesContent:["body {\n    background-color: black;\n    text-align: center;\n}\n\n.content {\n    width: 80vw;\n    height: 80vh;\n    border: 15px outset green;\n    border-radius: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n}\n.inputControls {\n    margin-top: 10px;\n}\n\nimg {\n    position: relative;\n    width: fit-content;\n    max-height: 60vh;\n    height: auto;\n    object-fit: fill;\n    border: 10px inset rgb(26, 201, 49);\n    border-radius: 12px;\n    margin-top: 10px;\n}\n\n#btnCopyLink {\n    margin: 25px;\n}\n\nbutton {\n    height: 48px;\n    border: 4px outset green;\n    background-color: transparent;\n    color: white;\n    padding: 10px;\n    font-weight: 550;\n    border-radius: 12px;\n}\n\nbutton:hover {\n    background-color: rgb(71, 255, 47);\n    color: black;\n}\n\nbutton:active {\n    background-color: green;\n    color: white;\n    border: 4px inset green;\n\n}\n\ninput {\n    background-color: transparent;\n    border-radius: 12px;\n    height: 40px;\n    color: white;\n}\n\ninput:focus {\n    outline: 2px solid green;\n\n}\n\n.testing {\n    color: white;\n}\n\n@media screen and (max-width: 700px) {\n    .content {\n        width: 96%;\n        height: 50%;\n        max-height: 70vh;\n        /* margin: 64px auto 0 auto; */\n        margin: 0 auto;\n        border: 5px outset green;\n    }\n\n    img {\n        width: 90%;\n        max-height: 50vh;\n        border: 5px inset green;\n    }\n\n    button {\n        width: 90%;\n        margin: 10px;\n    }\n\n    input {\n        width: 85%;\n        text-align: center;\n        margin: 0 auto;\n    }\n\n    .inputControls {\n        position: fixed;\n        bottom: 20px;\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n        align-items: flex-end;\n        row-gap: 15px;\n    }\n\n    .inputControls button {\n        margin: 0 auto;\n    }\n    \n}\n"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&i[d[0]]||(void 0!==A&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=A),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var A={},i=[],a=0;a<n.length;a++){var c=n[a],s=o.base?c[0]+o.base:c[0],d=A[s]||0,l="".concat(s," ").concat(d);A[s]=d+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var g=r(p,o);o.byIndex=a,e.splice(a,0,{identifier:l,updater:g,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=t(A[i]);e[a].references--}for(var c=o(n,r),s=0;s<A.length;s++){var d=t(A[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}A=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var A=e[o]={id:o,exports:{}};return n[o](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),A=t(569),i=t.n(A),a=t(565),c=t.n(a),s=t(216),d=t.n(s),l=t(589),u=t.n(l),p=t(917),g={};g.styleTagTransform=u(),g.setAttributes=c(),g.insert=i().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=d(),e()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals;var h=t(426),C={};C.styleTagTransform=u(),C.setAttributes=c(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=d(),e()(h.Z,C),h.Z&&h.Z.locals&&h.Z.locals;const m=document.querySelector("img"),b=document.querySelector("#btnRandomImg"),f=document.querySelector(".inputSearch"),B=document.querySelector("#btnSearch"),I=document.querySelector("#btnCopyLink");async function v(){try{const n=await fetch("https://api.giphy.com/v1/gifs/random?api_key=0JvtDfunbRZAukBB5R94oBnUtDprGS0i",{mode:"cors"}),e=await n.json();m.src=e.data.images.original.url}catch(n){console.log(n),m.src="https://media4.giphy.com/media/l0HUjDphISoMMCMPm/giphy.gif?cid=bbfc1e498djkmm9q38jdt5tdzvq5a41cf28x7z2cfyw4m6q7&rid=giphy.gif&ct=g"}}async function x(){try{const n=await fetch("https://api.giphy.com/v1/gifs/translate?api_key=0JvtDfunbRZAukBB5R94oBnUtDprGS0i&s="+f.value,{mode:"cors"}),e=await n.json();m.src=e.data.images.original.url}catch(n){console.log(n),m.src="https://media4.giphy.com/media/l0HUjDphISoMMCMPm/giphy.gif?cid=bbfc1e498djkmm9q38jdt5tdzvq5a41cf28x7z2cfyw4m6q7&rid=giphy.gif&ct=g"}}v(),b.addEventListener("click",v),B.addEventListener("click",x),f.addEventListener("keyup",(n=>{console.log(n.key),"Enter"===n.key&&x()})),I.addEventListener("click",(()=>{navigator.clipboard.writeText(m.src)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,